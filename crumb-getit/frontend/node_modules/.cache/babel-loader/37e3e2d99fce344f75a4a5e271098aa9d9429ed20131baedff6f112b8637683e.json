{"ast":null,"code":"var _jsxFileName = \"/Users/ananyaanand/Desktop/crumb-getit/crumb-getit/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\n// Assuming Tailwind CSS is set up in your project\n\n// --- Configuration ---\n// Define the backend base URL. Adjust if your backend runs elsewhere.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = 'http://127.0.0.1:5001'; // Use http://localhost:5001 if 127.0.0.1 doesn't work\n\n// Helper function to format ingredients for display or API\nconst formatIngredients = ingredients => {\n  // Example: Convert array of objects to a simple list string if needed\n  // Or just use the array directly if the API expects that\n  return ingredients.map(ing => `${ing.amount} ${ing.unit} ${ing.name}`).join(', ');\n};\n\n// --- Main App Component ---\nfunction App() {\n  _s();\n  var _recipe$ingredients_u, _recipe$instructions;\n  // --- State Variables ---\n  const [ingredients, setIngredients] = useState([{\n    name: 'chicken breast',\n    amount: 2,\n    unit: 'lbs'\n  }, {\n    name: 'olive oil',\n    amount: 2,\n    unit: 'tbsp'\n  }, {\n    name: 'lemon juice',\n    amount: 3,\n    unit: 'tbsp'\n  }, {\n    name: 'garlic',\n    amount: 2,\n    unit: 'cloves'\n  }, {\n    name: 'dried oregano',\n    amount: 1,\n    unit: 'tsp'\n  }, {\n    name: 'salt',\n    amount: 1,\n    unit: 'tsp'\n  }, {\n    name: 'black pepper',\n    amount: 0.5,\n    unit: 'tsp'\n  }\n  // Add more initial ingredients or allow user input\n  ]);\n  const [cuisine, setCuisine] = useState('Mediterranean');\n  const [selectedPersonality, setSelectedPersonality] = useState('Gordon Ramsay'); // Default personality\n  const [recipe, setRecipe] = useState(null);\n  const [chatHistory, setChatHistory] = useState([]); // Stores { sender: 'user'/'assistant', message: '...' }\n  const [userMessage, setUserMessage] = useState('');\n  const [isLoadingRecipe, setIsLoadingRecipe] = useState(false);\n  const [isLoadingChat, setIsLoadingChat] = useState(false);\n  const [error, setError] = useState(null);\n\n  // --- Available Personalities (matches Python keys/names) ---\n  const personalities = [\"Gordon Ramsay\", \"Julia Child\", \"Jamie Oliver\", \"Martha Stewart\", \"Padma Lakshmi\", \"Generic Chef\"];\n\n  // --- API Call Functions ---\n\n  // Function to generate recipe\n  const handleGenerateRecipe = useCallback(async () => {\n    setIsLoadingRecipe(true);\n    setError(null);\n    setRecipe(null); // Clear previous recipe\n    setChatHistory([]); // Clear chat on new recipe\n\n    console.log(\"Sending recipe request:\", {\n      ingredients,\n      cuisine\n    }); // Log request data\n\n    try {\n      // Use the BACKEND_URL constant\n      const response = await fetch(`${BACKEND_URL}/api/generate-recipe`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ingredients,\n          cuisine\n        })\n      });\n      console.log(\"Recipe response status:\", response.status); // Log response status\n\n      if (!response.ok) {\n        // --- Error Handling Fix ---\n        // Read the body ONCE as text first.\n        const errorText = await response.text();\n        let errorMsg = `HTTP error ${response.status}: ${errorText}`;\n        try {\n          // Try to parse the text as JSON for a more specific error message\n          const errorJson = JSON.parse(errorText);\n          errorMsg = `HTTP error ${response.status}: ${errorJson.error || errorText}`;\n        } catch (parseError) {\n          // If it's not JSON, use the raw text.\n          // errorMsg is already set to the text content.\n        }\n        throw new Error(errorMsg);\n        // --- End Error Handling Fix ---\n      }\n\n      // If response.ok is true, parse the JSON body\n      const data = await response.json();\n      console.log(\"Recipe received:\", data); // Log received data\n      setRecipe(data);\n      // Add an initial message from the assistant based on selected personality\n      let initialMessage = `Right, let's get cooking this ${data.recipe_name || 'dish'}! What's your first question?`;\n      setChatHistory([{\n        sender: 'assistant',\n        message: initialMessage\n      }]);\n    } catch (err) {\n      console.error(\"Failed to generate recipe:\", err);\n      // err.message now contains the detailed error from the backend or fetch failure\n      setError(`Failed to generate recipe: ${err.message}. Ensure the backend server at ${BACKEND_URL} is running and CORS is enabled.`);\n    } finally {\n      setIsLoadingRecipe(false);\n    }\n  }, [ingredients, cuisine]); // Dependencies for useCallback\n\n  // Function to send chat message\n  const handleSendMessage = useCallback(async () => {\n    if (!userMessage.trim() || !recipe) return; // Don't send empty messages or if no recipe\n\n    const messageToSend = userMessage;\n    const currentRecipeContext = recipe; // Capture current recipe state\n    const currentPersonality = selectedPersonality; // Capture current personality\n\n    setUserMessage(''); // Clear input field immediately\n    setIsLoadingChat(true);\n    setError(null);\n\n    // Add user message to history optimistically\n    const newUserMessageEntry = {\n      sender: 'user',\n      message: messageToSend\n    };\n    setChatHistory(prev => [...prev, newUserMessageEntry]);\n    const requestBody = {\n      message: messageToSend,\n      recipe: currentRecipeContext,\n      // Send the current recipe context\n      personality: currentPersonality\n    };\n    console.log(\"Sending chat request:\", requestBody); // Log request data\n\n    try {\n      // Use the BACKEND_URL constant\n      const response = await fetch(`${BACKEND_URL}/api/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      console.log(\"Chat response status:\", response.status); // Log response status\n\n      if (!response.ok) {\n        // --- Error Handling Fix ---\n        // Read the body ONCE as text first.\n        const errorText = await response.text();\n        let errorMsg = `HTTP error ${response.status}: ${errorText}`;\n        try {\n          // Try to parse the text as JSON for a more specific error message\n          const errorJson = JSON.parse(errorText);\n          errorMsg = `HTTP error ${response.status}: ${errorJson.error || errorText}`;\n        } catch (parseError) {\n          // If it's not JSON, use the raw text.\n        }\n        throw new Error(errorMsg);\n        // --- End Error Handling Fix ---\n      }\n\n      // If response.ok is true, parse the JSON body\n      const data = await response.json();\n      console.log(\"Chat reply received:\", data); // Log received data\n\n      // Add assistant response to history\n      setChatHistory(prev => [...prev, {\n        sender: 'assistant',\n        message: data.reply\n      }]);\n    } catch (err) {\n      console.error(\"Failed to send/receive chat message:\", err);\n      // err.message now contains the detailed error from the backend or fetch failure\n      setError(`Chat error: ${err.message}. Ensure the backend server at ${BACKEND_URL} is running.`);\n      // Optional: Remove the optimistically added user message on error\n      // setChatHistory(prev => prev.filter(msg => msg !== newUserMessageEntry));\n    } finally {\n      setIsLoadingChat(false);\n    }\n    // Include chatHistory in dependencies ONLY if you send it to the backend\n  }, [userMessage, recipe, selectedPersonality]); // Dependencies for useCallback\n\n  // --- Render ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 font-sans bg-gray-50 min-h-screen flex flex-col md:flex-row gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:w-1/2 space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-blue-700\",\n        children: \"Chef Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: ingredients.map(i => `${i.amount || ''} ${i.unit || ''} ${i.name || ''}`.trim()).join('\\n'),\n          onChange: e => {\n            const lines = e.target.value.split('\\n');\n            const newIngredients = lines.map(line => {\n              var _parts$, _parts$2, _parts$3;\n              const parts = line.trim().match(/^([\\d./\\s]*)\\s*([a-zA-Z]*)\\s*(.*)$/);\n              // Basic parsing, might need refinement\n              return {\n                amount: (parts === null || parts === void 0 ? void 0 : (_parts$ = parts[1]) === null || _parts$ === void 0 ? void 0 : _parts$.trim()) || '',\n                unit: (parts === null || parts === void 0 ? void 0 : (_parts$2 = parts[2]) === null || _parts$2 === void 0 ? void 0 : _parts$2.trim()) || '',\n                name: (parts === null || parts === void 0 ? void 0 : (_parts$3 = parts[3]) === null || _parts$3 === void 0 ? void 0 : _parts$3.trim()) || ''\n              };\n            }).filter(i => i.name); // Filter out empty lines\n            setIngredients(newIngredients);\n          },\n          rows: ingredients.length + 1 // Adjust rows dynamically\n          ,\n          className: \"w-full p-2 border rounded-md text-gray-700 whitespace-pre-wrap focus:ring-2 focus:ring-blue-500 focus:outline-none\",\n          placeholder: \"Enter ingredients: e.g., 2 lbs chicken breast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: \"Enter one ingredient per line (amount unit name).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cuisine\",\n          className: \"block text-xl font-semibold mb-2\",\n          children: \"Cuisine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"cuisine\",\n          type: \"text\",\n          value: cuisine,\n          onChange: e => setCuisine(e.target.value),\n          className: \"w-full p-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none\",\n          placeholder: \"e.g., Italian, Mexican\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"personality\",\n          className: \"block text-xl font-semibold mb-2\",\n          children: \"Chef Personality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"personality\",\n          value: selectedPersonality,\n          onChange: e => {\n            setSelectedPersonality(e.target.value);\n            // Optionally clear chat or add a personality change message\n            // setChatHistory([]);\n          },\n          className: \"w-full p-2 border rounded-md bg-white focus:ring-2 focus:ring-blue-500 focus:outline-none\",\n          children: personalities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: p,\n            children: p\n          }, p, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateRecipe,\n        disabled: isLoadingRecipe,\n        className: \"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md disabled:opacity-50 disabled:cursor-not-allowed transition duration-150 ease-in-out\",\n        children: isLoadingRecipe ? 'Generating...' : 'Generate Recipe'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-md relative mt-4\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"font-bold\",\n          children: \"Error: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"block sm:inline\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this), recipe && !isLoadingRecipe &&\n      /*#__PURE__*/\n      // Only show recipe if not loading and recipe exists\n      _jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow mt-4 space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-green-700\",\n          children: recipe.recipe_name || 'Generated Recipe'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Servings:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 16\n          }, this), \" \", recipe.servings || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-lg mb-1\",\n            children: \"Ingredients Used:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc list-inside ml-4\",\n            children: ((_recipe$ingredients_u = recipe.ingredients_used) === null || _recipe$ingredients_u === void 0 ? void 0 : _recipe$ingredients_u.length) > 0 ? recipe.ingredients_used.map((ing, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: `${ing.amount || ''} ${ing.unit || ''} ${ing.name || 'Unknown'}`.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"No ingredients listed.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-lg mb-1\",\n            children: \"Instructions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"list-decimal list-inside ml-4 space-y-1\",\n            children: ((_recipe$instructions = recipe.instructions) === null || _recipe$instructions === void 0 ? void 0 : _recipe$instructions.length) > 0 ? recipe.instructions.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: step\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"No instructions provided.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:w-1/2 flex flex-col bg-white p-4 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-3 border-b pb-2\",\n        children: [selectedPersonality, \" Assistant\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow overflow-y-auto mb-4 h-64 md:h-[50vh] lg:h-[60vh] border rounded-md p-3 bg-gray-50 space-y-3 scroll-smooth\",\n        children: [\" \", chatHistory.length === 0 && recipe && !isLoadingRecipe && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 italic text-center p-4\",\n          children: \"Recipe generated. Ask the chef a question!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 14\n        }, this), chatHistory.length === 0 && !recipe && !isLoadingRecipe && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 italic text-center p-4\",\n          children: \"Generate a recipe to start chatting.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 14\n        }, this), isLoadingRecipe &&\n        /*#__PURE__*/\n        // Show loading message while recipe generates\n        _jsxDEV(\"p\", {\n          className: \"text-gray-500 italic text-center p-4\",\n          children: \"Generating recipe...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 14\n        }, this), chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${chat.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `py-2 px-3 rounded-lg max-w-xs lg:max-w-md shadow-sm ${chat.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n            children: chat.message.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 41\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)), isLoadingChat && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"py-2 px-3 rounded-lg bg-gray-200 text-gray-500 italic animate-pulse\",\n            children: [\" \", selectedPersonality, \" is typing...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: el => {\n            el === null || el === void 0 ? void 0 : el.scrollIntoView({\n              behavior: 'smooth'\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 border-t pt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && !isLoadingChat && handleSendMessage(),\n          className: \"flex-grow p-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none disabled:bg-gray-100\",\n          placeholder: recipe ? `Ask ${selectedPersonality}...` : \"Generate a recipe first\",\n          disabled: !recipe || isLoadingChat || isLoadingRecipe // Disable input while recipe is loading too\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: !recipe || isLoadingChat || isLoadingRecipe || !userMessage.trim() // Disable button while recipe is loading\n          ,\n          className: \"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-md disabled:opacity-50 disabled:cursor-not-allowed transition duration-150 ease-in-out\",\n          \"aria-label\": \"Send chat message\" // Accessibility\n          ,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Inza5sxAAgfVKA59i40zGGQ4WIk=\");\n_c = App;\nexport default App; // Ensure App is exported as default\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","BACKEND_URL","formatIngredients","ingredients","map","ing","amount","unit","name","join","App","_s","_recipe$ingredients_u","_recipe$instructions","setIngredients","cuisine","setCuisine","selectedPersonality","setSelectedPersonality","recipe","setRecipe","chatHistory","setChatHistory","userMessage","setUserMessage","isLoadingRecipe","setIsLoadingRecipe","isLoadingChat","setIsLoadingChat","error","setError","personalities","handleGenerateRecipe","console","log","response","fetch","method","headers","body","JSON","stringify","status","ok","errorText","text","errorMsg","errorJson","parse","parseError","Error","data","json","initialMessage","recipe_name","sender","message","err","handleSendMessage","trim","messageToSend","currentRecipeContext","currentPersonality","newUserMessageEntry","prev","requestBody","personality","reply","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","i","onChange","e","lines","target","split","newIngredients","line","_parts$","_parts$2","_parts$3","parts","match","filter","rows","length","placeholder","htmlFor","id","type","p","onClick","disabled","role","servings","ingredients_used","index","instructions","step","chat","ref","el","scrollIntoView","behavior","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/ananyaanand/Desktop/crumb-getit/crumb-getit/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n// Assuming Tailwind CSS is set up in your project\n\n// --- Configuration ---\n// Define the backend base URL. Adjust if your backend runs elsewhere.\nconst BACKEND_URL = 'http://127.0.0.1:5001'; // Use http://localhost:5001 if 127.0.0.1 doesn't work\n\n// Helper function to format ingredients for display or API\nconst formatIngredients = (ingredients) => {\n  // Example: Convert array of objects to a simple list string if needed\n  // Or just use the array directly if the API expects that\n  return ingredients.map(ing => `${ing.amount} ${ing.unit} ${ing.name}`).join(', ');\n};\n\n// --- Main App Component ---\nfunction App() {\n  // --- State Variables ---\n  const [ingredients, setIngredients] = useState([\n    { name: 'chicken breast', amount: 2, unit: 'lbs' },\n    { name: 'olive oil', amount: 2, unit: 'tbsp' },\n    { name: 'lemon juice', amount: 3, unit: 'tbsp' },\n    { name: 'garlic', amount: 2, unit: 'cloves' },\n    { name: 'dried oregano', amount: 1, unit: 'tsp' },\n    { name: 'salt', amount: 1, unit: 'tsp' },\n    { name: 'black pepper', amount: 0.5, unit: 'tsp' },\n    // Add more initial ingredients or allow user input\n  ]);\n  const [cuisine, setCuisine] = useState('Mediterranean');\n  const [selectedPersonality, setSelectedPersonality] = useState('Gordon Ramsay'); // Default personality\n  const [recipe, setRecipe] = useState(null);\n  const [chatHistory, setChatHistory] = useState([]); // Stores { sender: 'user'/'assistant', message: '...' }\n  const [userMessage, setUserMessage] = useState('');\n  const [isLoadingRecipe, setIsLoadingRecipe] = useState(false);\n  const [isLoadingChat, setIsLoadingChat] = useState(false);\n  const [error, setError] = useState(null);\n\n  // --- Available Personalities (matches Python keys/names) ---\n  const personalities = [\n    \"Gordon Ramsay\",\n    \"Julia Child\",\n    \"Jamie Oliver\",\n    \"Martha Stewart\",\n    \"Padma Lakshmi\",\n    \"Generic Chef\"\n  ];\n\n  // --- API Call Functions ---\n\n  // Function to generate recipe\n  const handleGenerateRecipe = useCallback(async () => {\n    setIsLoadingRecipe(true);\n    setError(null);\n    setRecipe(null); // Clear previous recipe\n    setChatHistory([]); // Clear chat on new recipe\n\n    console.log(\"Sending recipe request:\", { ingredients, cuisine }); // Log request data\n\n    try {\n      // Use the BACKEND_URL constant\n      const response = await fetch(`${BACKEND_URL}/api/generate-recipe`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ ingredients, cuisine }),\n      });\n\n       console.log(\"Recipe response status:\", response.status); // Log response status\n\n      if (!response.ok) {\n        // --- Error Handling Fix ---\n        // Read the body ONCE as text first.\n        const errorText = await response.text();\n        let errorMsg = `HTTP error ${response.status}: ${errorText}`;\n        try {\n            // Try to parse the text as JSON for a more specific error message\n            const errorJson = JSON.parse(errorText);\n            errorMsg = `HTTP error ${response.status}: ${errorJson.error || errorText}`;\n        } catch (parseError) {\n            // If it's not JSON, use the raw text.\n            // errorMsg is already set to the text content.\n        }\n        throw new Error(errorMsg);\n        // --- End Error Handling Fix ---\n      }\n\n      // If response.ok is true, parse the JSON body\n      const data = await response.json();\n      console.log(\"Recipe received:\", data); // Log received data\n      setRecipe(data);\n       // Add an initial message from the assistant based on selected personality\n       let initialMessage = `Right, let's get cooking this ${data.recipe_name || 'dish'}! What's your first question?`;\n       setChatHistory([{ sender: 'assistant', message: initialMessage }]);\n\n    } catch (err) {\n      console.error(\"Failed to generate recipe:\", err);\n      // err.message now contains the detailed error from the backend or fetch failure\n      setError(`Failed to generate recipe: ${err.message}. Ensure the backend server at ${BACKEND_URL} is running and CORS is enabled.`);\n    } finally {\n      setIsLoadingRecipe(false);\n    }\n  }, [ingredients, cuisine]); // Dependencies for useCallback\n\n  // Function to send chat message\n  const handleSendMessage = useCallback(async () => {\n    if (!userMessage.trim() || !recipe) return; // Don't send empty messages or if no recipe\n\n    const messageToSend = userMessage;\n    const currentRecipeContext = recipe; // Capture current recipe state\n    const currentPersonality = selectedPersonality; // Capture current personality\n\n    setUserMessage(''); // Clear input field immediately\n    setIsLoadingChat(true);\n    setError(null);\n\n    // Add user message to history optimistically\n    const newUserMessageEntry = { sender: 'user', message: messageToSend };\n    setChatHistory(prev => [...prev, newUserMessageEntry]);\n\n    const requestBody = {\n        message: messageToSend,\n        recipe: currentRecipeContext, // Send the current recipe context\n        personality: currentPersonality,\n    };\n\n    console.log(\"Sending chat request:\", requestBody); // Log request data\n\n    try {\n      // Use the BACKEND_URL constant\n      const response = await fetch(`${BACKEND_URL}/api/chat`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(requestBody),\n      });\n\n      console.log(\"Chat response status:\", response.status); // Log response status\n\n      if (!response.ok) {\n        // --- Error Handling Fix ---\n        // Read the body ONCE as text first.\n        const errorText = await response.text();\n        let errorMsg = `HTTP error ${response.status}: ${errorText}`;\n         try {\n            // Try to parse the text as JSON for a more specific error message\n            const errorJson = JSON.parse(errorText);\n            errorMsg = `HTTP error ${response.status}: ${errorJson.error || errorText}`;\n        } catch (parseError) {\n            // If it's not JSON, use the raw text.\n        }\n        throw new Error(errorMsg);\n         // --- End Error Handling Fix ---\n      }\n\n      // If response.ok is true, parse the JSON body\n      const data = await response.json();\n      console.log(\"Chat reply received:\", data); // Log received data\n\n      // Add assistant response to history\n      setChatHistory(prev => [...prev, { sender: 'assistant', message: data.reply }]);\n\n    } catch (err) {\n      console.error(\"Failed to send/receive chat message:\", err);\n      // err.message now contains the detailed error from the backend or fetch failure\n      setError(`Chat error: ${err.message}. Ensure the backend server at ${BACKEND_URL} is running.`);\n      // Optional: Remove the optimistically added user message on error\n      // setChatHistory(prev => prev.filter(msg => msg !== newUserMessageEntry));\n    } finally {\n      setIsLoadingChat(false);\n    }\n  // Include chatHistory in dependencies ONLY if you send it to the backend\n  }, [userMessage, recipe, selectedPersonality]); // Dependencies for useCallback\n\n  // --- Render ---\n  return (\n    <div className=\"container mx-auto p-4 font-sans bg-gray-50 min-h-screen flex flex-col md:flex-row gap-4\">\n\n      {/* --- Left Panel: Inputs & Recipe --- */}\n      <div className=\"md:w-1/2 space-y-4\">\n        <h1 className=\"text-3xl font-bold text-blue-700\">Chef Assistant</h1>\n\n        {/* Ingredients Input (Simplified - could be a more complex component) */}\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <h2 className=\"text-xl font-semibold mb-2\">Ingredients</h2>\n          {/* Make ingredients editable - Example using textarea */}\n           <textarea\n             value={ingredients.map(i => `${i.amount || ''} ${i.unit || ''} ${i.name || ''}`.trim()).join('\\n')}\n             onChange={(e) => {\n               const lines = e.target.value.split('\\n');\n               const newIngredients = lines.map(line => {\n                 const parts = line.trim().match(/^([\\d./\\s]*)\\s*([a-zA-Z]*)\\s*(.*)$/);\n                 // Basic parsing, might need refinement\n                 return {\n                   amount: parts?.[1]?.trim() || '',\n                   unit: parts?.[2]?.trim() || '',\n                   name: parts?.[3]?.trim() || ''\n                 };\n               }).filter(i => i.name); // Filter out empty lines\n               setIngredients(newIngredients);\n             }}\n             rows={ingredients.length + 1} // Adjust rows dynamically\n             className=\"w-full p-2 border rounded-md text-gray-700 whitespace-pre-wrap focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n             placeholder=\"Enter ingredients: e.g., 2 lbs chicken breast\"\n           />\n           <p className=\"text-xs text-gray-500 mt-1\">Enter one ingredient per line (amount unit name).</p>\n        </div>\n\n        {/* Cuisine Input */}\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <label htmlFor=\"cuisine\" className=\"block text-xl font-semibold mb-2\">Cuisine</label>\n          <input\n            id=\"cuisine\"\n            type=\"text\"\n            value={cuisine}\n            onChange={(e) => setCuisine(e.target.value)}\n            className=\"w-full p-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n            placeholder=\"e.g., Italian, Mexican\"\n          />\n        </div>\n\n         {/* Personality Selector */}\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n            <label htmlFor=\"personality\" className=\"block text-xl font-semibold mb-2\">Chef Personality</label>\n            <select\n                id=\"personality\"\n                value={selectedPersonality}\n                onChange={(e) => {\n                    setSelectedPersonality(e.target.value);\n                    // Optionally clear chat or add a personality change message\n                    // setChatHistory([]);\n                }}\n                className=\"w-full p-2 border rounded-md bg-white focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n            >\n                {personalities.map(p => <option key={p} value={p}>{p}</option>)}\n            </select>\n        </div>\n\n        {/* Generate Recipe Button */}\n        <button\n          onClick={handleGenerateRecipe}\n          disabled={isLoadingRecipe}\n          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md disabled:opacity-50 disabled:cursor-not-allowed transition duration-150 ease-in-out\"\n        >\n          {isLoadingRecipe ? 'Generating...' : 'Generate Recipe'}\n        </button>\n\n        {/* Display Error Messages */}\n        {error && (\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-md relative mt-4\" role=\"alert\">\n                <strong className=\"font-bold\">Error: </strong>\n                <span className=\"block sm:inline\">{error}</span>\n            </div>\n        )}\n\n\n        {/* Display Recipe */}\n        {recipe && !isLoadingRecipe && ( // Only show recipe if not loading and recipe exists\n          <div className=\"bg-white p-4 rounded-lg shadow mt-4 space-y-3\">\n            <h2 className=\"text-2xl font-bold text-green-700\">{recipe.recipe_name || 'Generated Recipe'}</h2>\n            <p><span className=\"font-semibold\">Servings:</span> {recipe.servings || 'N/A'}</p>\n            <div>\n              <h3 className=\"font-semibold text-lg mb-1\">Ingredients Used:</h3>\n              <ul className=\"list-disc list-inside ml-4\">\n                {recipe.ingredients_used?.length > 0 ? recipe.ingredients_used.map((ing, index) => (\n                  <li key={index}>{`${ing.amount || ''} ${ing.unit || ''} ${ing.name || 'Unknown'}`.trim()}</li>\n                )) : <li>No ingredients listed.</li>}\n              </ul>\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-lg mb-1\">Instructions:</h3>\n              <ol className=\"list-decimal list-inside ml-4 space-y-1\">\n                 {recipe.instructions?.length > 0 ? recipe.instructions.map((step, index) => (\n                  <li key={index}>{step}</li>\n                )) : <li>No instructions provided.</li>}\n              </ol>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* --- Right Panel: Chat --- */}\n      <div className=\"md:w-1/2 flex flex-col bg-white p-4 rounded-lg shadow\">\n        <h2 className=\"text-xl font-semibold mb-3 border-b pb-2\">{selectedPersonality} Assistant</h2>\n        {/* Chat History Area */}\n        <div className=\"flex-grow overflow-y-auto mb-4 h-64 md:h-[50vh] lg:h-[60vh] border rounded-md p-3 bg-gray-50 space-y-3 scroll-smooth\"> {/* Added scroll-smooth */}\n          {chatHistory.length === 0 && recipe && !isLoadingRecipe && (\n             <p className=\"text-gray-500 italic text-center p-4\">Recipe generated. Ask the chef a question!</p>\n          )}\n           {chatHistory.length === 0 && !recipe && !isLoadingRecipe && (\n             <p className=\"text-gray-500 italic text-center p-4\">Generate a recipe to start chatting.</p>\n          )}\n           {isLoadingRecipe && ( // Show loading message while recipe generates\n             <p className=\"text-gray-500 italic text-center p-4\">Generating recipe...</p>\n           )}\n          {chatHistory.map((chat, index) => (\n            <div key={index} className={`flex ${chat.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\n              <div className={`py-2 px-3 rounded-lg max-w-xs lg:max-w-md shadow-sm ${chat.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`}>\n                 {/* Basic Markdown-like rendering for newlines */}\n                {chat.message.split('\\n').map((line, i) => (\n                    <span key={i}>{line}<br/></span>\n                ))}\n              </div>\n            </div>\n          ))}\n           {/* Typing indicator */}\n           {isLoadingChat && (\n             <div className=\"flex justify-start\">\n                <div className=\"py-2 px-3 rounded-lg bg-gray-200 text-gray-500 italic animate-pulse\"> {/* Added animate-pulse */}\n                    {selectedPersonality} is typing...\n                </div>\n             </div>\n           )}\n            {/* Add a ref to scroll to bottom */}\n            <div ref={(el) => { el?.scrollIntoView({ behavior: 'smooth' }); }}></div>\n        </div>\n        {/* Chat Input Area */}\n        <div className=\"flex gap-2 border-t pt-3\">\n          <input\n            type=\"text\"\n            value={userMessage}\n            onChange={(e) => setUserMessage(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && !isLoadingChat && handleSendMessage()}\n            className=\"flex-grow p-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none disabled:bg-gray-100\"\n            placeholder={recipe ? `Ask ${selectedPersonality}...` : \"Generate a recipe first\"}\n            disabled={!recipe || isLoadingChat || isLoadingRecipe} // Disable input while recipe is loading too\n          />\n          <button\n            onClick={handleSendMessage}\n            disabled={!recipe || isLoadingChat || isLoadingRecipe || !userMessage.trim()} // Disable button while recipe is loading\n            className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-md disabled:opacity-50 disabled:cursor-not-allowed transition duration-150 ease-in-out\"\n            aria-label=\"Send chat message\" // Accessibility\n          >\n            Send\n          </button>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App; // Ensure App is exported as default\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}